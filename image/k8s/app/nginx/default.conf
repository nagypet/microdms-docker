server {
  listen                80;

  # DNS
  resolver              kube-dns.kube-system.svc.cluster.local valid=10s;
  set                   $backend_host "microdms-service.microdms.svc.cluster.local";

  # kill cache
  add_header            Last-Modified $date_gmt;
  add_header            Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
  if_modified_since     off;
  expires               off;
  etag                  off;

  # Other settings
  gzip                  on;
  http2                 on;

  # Proxy to the backend container. The X-Forwarded-For header is set to $http_x_real_ip because we get called from another
  # nginx proxy.
  location ~ ^/(frontend|api)/ {
    proxy_pass          "http://$backend_host";
    proxy_set_header    Host $http_host;
    proxy_set_header    Authorization $http_authorization;
    proxy_set_header    X-NginX-Proxy true;
    proxy_set_header    X-Real-IP $http_x_real_ip;
    proxy_set_header    X-Forwarded-For $http_x_real_ip;
  }

  # Serving Angular app at /app/browser/
  location /app/browser/ {
    root /usr/share/app/html;
    index index.html;
    try_files $uri /index.html;
  }

  # Serving Angular app at root
  location = / {
      root /usr/share/app/html/app/browser;
      index index.html;
      try_files /index.html =404;
  }

  # Fallback to /app/browser if there is no exact match
  location / {
    rewrite ^/(.*)$ /app/browser/$1 last;
  }
}
